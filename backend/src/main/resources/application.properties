spring.application.name=demo

spring.config.import=optional:file:.env[.properties]

spring.datasource.url=jdbc:postgresql://${DB_URL}:${DB_PORT}/${DB_NAME}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# flyway
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration



# spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.ddl-auto = validate


# email
spring.mail.host=${MAIL_HOST}
spring.mail.port=${MAIL_PORT}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true



spring.elasticsearch.uris=${ELASTICSEARCH_URIS}



site.base.url.http=${SITE_BASE_URL_HTTP}
token.expirationms=3600000

allowed-origins=${ORIGIN}


# spring.ai.ollama.chat.model=${AI_MODEL}

# spring.ai.openai.api-key=${AI_MODEL}


gemini.api.url=${GEMINI_API_URL}
gemini.api.key=${GEMINI_API_KEY}


#  -1 to disable the limit to avoid any conflicts with your chunking logic.
spring.servlet.multipart.max-file-size=-1
spring.servlet.multipart.max-request-size=5MB



spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=${REDIS_PORT}